import React, { Component } from 'react';
import { withRouter } from "react-router-dom";
import { connect } from 'react-redux';
import Custom_InputBox from '../common/custom_inputbox';
import { Button } from '@mui/material';
import axios from "axios";

import {
	Card,
	CardBody,
} from "reactstrap";

let isPresent = false;
class VulnerabilitySearchForm extends Component {
	state = 
	{
		filenames:[],
		input:"",
		fileData:{},
		tutorial: false
		//fileData:{}
	};

	handleClick = this.handleClick.bind(this);

	componentDidMount() {
		isPresent = false;
		axios.get('/api/getHistory', this.state)
		.then(response => 
			{
			this.setState({fileData:response.data})
			this.setState({filenames:Object.keys(this.state.fileData)})
			}
		)
		.catch(error => console.error(error));

	}
	onInputChange = (e,new_value) =>
	{
		this.setState({input:new_value});
		if(this.state.filenames.includes(new_value)) {
			isPresent = true;
		}
		else
		{
			isPresent = false;
		} 
		console.log(isPresent);
	}
	onChange = (e,new_value) => 
	{
		e.persist();
		//this.setState({input:new_value});
	}

	onFetch = (e) =>
	{
		e.preventDefault();		
		this.props.history.push(`/vulnerabilityresult?sha=${this.state.input}&status=false`);
	}

	onLoad = (e) =>
	{

		this.props.history.push(`/vulnerabilityresult?sha=${this.state.filenames[this.state.filenames.indexOf(this.state.input)]}&status=true`);
		
	}

	handleClick () {
		if (!(this.state.tutorial)) {
			this.setState({tutorial: true});
		}
		else { 
			this.setState({tutorial: false});
		}
	}
	

	render() {
	
			return (
				<Card className="bg-secondary shadow border-0" style={{ width: '30rem'}}>
					<CardBody className="px-lg-5 py-lg-5">
							<Custom_InputBox options={this.state.filenames} onChange={this.onChange} onInputChange={this.onInputChange} /> 
							<br/>
							{isPresent  && 
							<>
								<label>Modification Date: {this.state.fileData[this.state.input]} </label>
								<br/>
								<div style={{display:"flex"}}>
									<form onSubmit={this.onFetch}>
										<Button type='submit'variant="contained" color="primary" sx={{marginRight:"10px"}} >Fetch</Button>
									</form>
									<form onSubmit={this.onLoad}>
										<Button type='submit' variant="contained" color="primary">Load</Button> 
									</form>
								</div>
							</>
							}
							{isPresent == 0  && 
							<>
							<form onSubmit={this.onFetch} style={{display: 'inline-block', marginRight: '3%'}}>
								<Button onClick={this.onFetch} type='submit'variant="contained" color="primary" >Fetch</Button>
							</form>
							<Button onClick={this.handleClick} type='submit'variant="contained" color="primary">Need Help?</Button>
							<div><p></p></div>
							{this.state.tutorial &&
								<div className="row justify-content-center" style={{ color: "black"}}>
								<Card className="card" style={{width:"385px", backgroundColor:"white"}}>
								  <Button onClick={this.handleClick} style={{backgroundColor: "white", color: "black"}}>X</Button>
									<div className="row justify-content-center" style={{ color: "black"}}>
									<Card className="card" style={{width: "355px",color: "black", background: "white",border: "black"}}>
										<b style={{marginLeft:"0.35em",marginBottom:"10px"}}><strong>What is this page for?</strong></b>
										<p style={{marginLeft:"1.5em",marginRight:"1.5em"}}><strong>This page allows you to view the contents of a blob
										  through the specification of a SHA that contains a vulnerability. Using this tool displays a graphical representation of
										  the vulnerability shell script.
										  </strong></p>
										  <div><p>    </p></div>
									</Card>
								</div>	
								<div className="row justify-content-center" style={{ color: "black"}}>
									<Card className="card" style={{width: "355px",color: "black", background: "white",border: "black"}}>
										<b style={{marginLeft:"0.35em",marginBottom:"10px"}}><strong>Example:</strong></b>
										<p style={{marginLeft:"1.5em",marginRight:"1.5em"}}><strong>SHA</strong></p>
										<p style={{marginLeft:"1.5em",marginRight:"1.5em"}}><strong>464ac950171f673d1e45e2134ac9a52eca422132.json</strong></p>
										<b style={{marginLeft:"0.35em",marginBottom:"10px"}}><strong>Results:</strong></b>
										<p style={{marginLeft:"1.5em",marginRight:"1.5em"}}><strong>This will return statistics about the search,
										as well as information and links from blobs that contain the same vulnerability as the SHA passed, just
										like the vulnerability shell script.</strong></p>
										  <div><p>    </p></div>
									</Card>
								</div>	
								</Card>
								</div>
							}
							</>
							}

					</CardBody>
				</Card>
			);
		
		
	}
}

VulnerabilitySearchForm.propTypes = {
}

function mapStateToProps(state) {
	return {

	};
}

export default connect(mapStateToProps, {})(withRouter(VulnerabilitySearchForm));