import React, { Component } from 'react';
import { withRouter } from "react-router-dom";
import { connect } from 'react-redux';
import Custom_InputBox from '../common/custom_inputbox';
import { Button } from '@mui/material';
import axios from "axios";

import {
	Card,
	CardBody,
} from "reactstrap";

let isPresent = false;
class VulnerabilitySearchForm extends Component {
	state = 
	{
		filenames:[""],
		input:"",
		//fileData:{}
	};

	componentDidMount() {
		isPresent = false;
		axios.get('/api/getHistory', this.state)
		.then(response => this.setState({filenames:response.data}))
		.catch(error => console.error(error));
		//filenames = fileData.map(name);
	}
	onInputChange = (e,new_value) =>
	{
		this.setState({input:new_value});
		if(this.state.filenames.includes(new_value)) {
			isPresent = true;
		}
		else
		{
			isPresent = false;
		} 
		console.log(isPresent);
	}
	onChange = (e,new_value) => 
	{
		e.persist();
		//this.setState({input:new_value});
	}

	onFetch = (e) =>
	{
		e.preventDefault();		
		this.props.history.push(`/vulnerabilityresult?sha=${this.state.input}&status=false`);
	}

	onLoad = (e) =>
	{

		this.props.history.push(`/vulnerabilityresult?sha=${this.state.filenames[this.state.filenames.indexOf(this.state.input)]}&status=true`);
		
	}
	

	render() {
	
			return (
				<Card className="bg-secondary shadow border-0" style={{ width: '30rem'}}>
					<CardBody className="px-lg-5 py-lg-5">
							<Custom_InputBox options={this.state.filenames} onChange={this.onChange} onInputChange={this.onInputChange} /> 
							<br/>
							{isPresent  && 
							<>
								<label>Modification Date: </label>
								<br/>
								<div style={{display:"flex"}}>
								<form onSubmit={this.onFetch}>
									<Button type='submit'variant="contained" color="primary" sx={{marginRight:"10px"}} >Fetch</Button>
								</form>
								<form onSubmit={this.onLoad}>
									<Button type='submit' variant="contained" color="primary">Load</Button> 
								</form>
								</div>
							</>
							}
							{isPresent == 0  && 
							<>
								<form onSubmit={this.onFetch}>
									<Button type='submit'variant="contained" color="primary" >Fetch</Button>
								</form>

							</>
							}

					</CardBody>
				</Card>
			);
		
		
	}
}

VulnerabilitySearchForm.propTypes = {
}

function mapStateToProps(state) {
	return {

	};
}

export default connect(mapStateToProps, {})(withRouter(VulnerabilitySearchForm));