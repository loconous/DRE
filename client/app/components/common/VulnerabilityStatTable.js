import React from "react";

import Accordion from 'react-bootstrap/Accordion'
import 'bootstrap/dist/css/bootstrap.min.css';

import VulnerabilityProjectCard from "../common/VulnerabilityProjectCard";

import {
  Row,
  Card,
  CardHeader,
  Container,
  Table,
  UncontrolledTooltip
} from "reactstrap";

import { VulnerabilityStyles } from './VulnerabilityStyles';

class VulnerabilityStatTable extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      auth_list: props.auth_list,
      stats: props.stats,
      title: props.title,
      headers: props.headers
    }

    this.renderBody = this.renderBody.bind(this);
  }

  componentWillReceiveProps(nextProps) {
    if (this.props != nextProps) {
      this.setState({
        auth_list: nextProps.auth_list,
        stats: nextProps.stats,
        title: nextProps.title,
        headers: nextProps.headers
      }, () => { });
    }
  }


  renderBody() {
    let { stats } = this.state;
    if (stats) {
      return stats.map((proj) => {
        if (this.state.title == 'Blobs') {
          const { hash, commits } = proj;
          return (
            <Accordion key={hash}>
              <Accordion.Item eventKey="0">
                <Accordion.Header>
                      <a href="#" onClick={(e) => { e.preventDefault(); this.props.onClickBlob(blob); }}>
                        {hash}
                      </a>
                </Accordion.Header>
                <Accordion.Body>
                    {commits.map((commit_loop) => {
                    const { commit, tree, author, authorTime, projects } = commit_loop;
                    return (
                      <Accordion key={commit_loop}>
                        <Accordion.Item eventKey="0">
                          <Accordion.Header>
                            {author}
                          </Accordion.Header>
                          <Accordion.Body>
                            <div>
                            {projects.names.map((project_loop) => {
                            return (                           
                                 <VulnerabilityProjectCard
                                 title="Project Name"
                                 pname = {project_loop}
                                 author = {commit}
                                 icon="far fa-folder"
                                 color="bg-info"
                                 />
                            )
                             })}
                              </div>
                          </Accordion.Body>
                        </Accordion.Item>
                      </Accordion>
                    )
                  })}
                </Accordion.Body>
              </Accordion.Item>
            </Accordion>

          )
        }
      })
    }
  }

  render() {
    return (
      <Card className="shadow">
        <CardHeader className="border-0">
          <Row className="align-items-center">
            {this.state.title &&
              <div className="col">
                <h3 className="mb-0">{this.state.title}</h3>
              </div>
            }
          </Row>
        </CardHeader>
            {this.renderBody()}
      </Card>
    );
  }
}

export default VulnerabilityStatTable;